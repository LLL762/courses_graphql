type Query {
    courseById(id: ID!): Course
    courseByName(name: String!): Course
    courseByTeacherLastName(lastName: String!,page:Int!,limit:Int=20): Page
}

type Mutation {
    addCourse(course: CourseInput!): Course
}

type Page {
    items: [Pageable],
    page: Int,
    limit: Int,
    pageTotal: Int,
    itemTotal: Int,
    nbItems: Int
}

union Pageable = Course | Teacher | Student | Degree

type Course {
    id: Int
    name: String
    description: String
    teacher: Teacher
    degree: Degree
    students: [Student]
}

type Teacher {
    id: Int
    firstName: String
    lastName: String
    email: String
    degrees: [TeacherHasDegree]
}

type Student {
    id: Int
    firstName: String
    lastName: String
    email: String
    degrees: [StudentHasDegree]
}

type Degree {
    id: Int
    name: String
}

input CourseInput {
    name: String!
    description: String!
    degree: Int!
    teacher: Int!
}

type TeacherHasDegree{
    degree: Degree
    earningDate: String
}

type StudentHasDegree{
    degree: Degree
    earningDate: String
}





